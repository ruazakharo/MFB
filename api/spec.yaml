swagger: '2.0'
info:
  description: Bank of the future API
  version: 1.0.0
  title: Bank of the future API
  license:
    name: Licensed by Harman
securityDefinitions: 
  token:
    type: apiKey
    name: Authorization
    in: header
    description: Should be put in Authorization header and prefixed with schema (Bearer). Example - "Bearer %token%"
    x-authorize: ./auth-token.js
basePath: /mfb/api
paths:
  /appointment/reasons:
    get:
      tags:
        - appointment general
      summary: Get list of available appointment reasons
      responses:
        200:
          description: List of reasons
          schema:
            type: array
            items:
              $ref: '#/definitions/AppointmentReason'
  /appointment/offices:
    get:
      tags:
        - appointment general
      summary: Get list of available appointment offices
      responses:
        200:
          description: List of offices
          schema:
            type: array
            items:
              $ref: '#/definitions/AppointmentOffice'
  /signup:
    post:
      tags:
        - web-only
        - auth
      summary: Signup user for an appointment
      description: >
        Creates the user and assigns an appointment. 
        If user already exists, only assigns a new appointment.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SignupRequest'
      responses:
        204:
          description: Signed up
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /signin:
    post:
      tags:
        - auth
      summary: Sign in
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SigninRequest'
      responses:
        200:
          description: Signed in
          schema:
            $ref: '#/definitions/SigninResponse'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/appointments:
    post:
      tags:
        - user appointment
      security:
        - token: []
      summary: Create a new appointment
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AppointmentRequest'
      responses:
        200:
          description: Appointment creates successfully
          schema:
            $ref: '#/definitions/Appointment'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/appointments/{appointmentId}/status:
    put:
      tags:
        - user appointment
      summary: Update appointment status
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AppointmentStatus'
      responses:
        204:
          description: Appointment updated successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/info:
    get:
      tags:
        - user appointment
      security:
        - token: []
      summary: Get current user info and status
      responses:
        200:
          description: User info
          schema:
            $ref: '#/definitions/UserInfo'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/presence:
    put:
      security:
        - token: []
      summary: Update user presence in the bank
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ClientPresence'
      responses:
        204:
          description: Updated successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/appointments/current:
    get:
      tags:
        - user appointment
      security:
        - token: []
      summary: Get current appointment
      responses:
        200:
          description: Updated appointment
          schema:
            $ref: '#/definitions/Appointment'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - user appointment
      security:
        - token: []
      summary: Updates current appointment
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AppointmentRequest'
      responses:
        200:
          description: Updated appointment
          schema:
            $ref: '#/definitions/Appointment'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - user appointment
      security:
        - token: []
      summary: Cancels current appointment
      responses:
        204:
          description: Deleted successfully
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/appointments/current/checkin:
    post:
      tags:
        - user appointment
      security:
        - token: []
      summary: Check in current appointment
      responses:
        200:
          description: Updated appointment
          schema:
            $ref: '#/definitions/Appointment'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /user/appointments/current/queue:
    get:
      tags:
        - user appointment
      security:
        - token: []
      summary: Get queue status for current appointment
      responses:
        200:
          description: Appointment queue
          schema:
            $ref: '#/definitions/AppointmentQueue'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /office/queue:
    get:
      tags:
        - office
      summary: Get queue for current office
      responses:
        200:
          description: OfficeQueue
          schema:
            $ref: '#/definitions/AppointmentQueue'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /signage/identification:
    post:
      tags:
        - signage
      summary: Get signage details for recognized client
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SignageIdentificationRequest'
      responses:
        200:
          description: Signage client details
          schema:
            $ref: '#/definitions/SignageIdentification'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /signage/presence:
    post:
      summary: Update presence for client
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SignagePresenceUpdate'
      responses:
        204:
          description: Presence updated
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /clients:
    get:
      summary: Get list of current clients
      responses:
        200:
          description: Client list
          schema:
            type: array
            items:
              $ref: '#/definitions/ClientInfo'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /bankers:
    get:
      summary: Get list of active bankers
      responses:
        200:
          description: Bankers list
          schema:
            type: array
            items:
              $ref: '#/definitions/BankerInfo'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /bankers/{bankerId}/status:
    put:
      summary: Update banker status
      parameters:
        - in: path
          name: bankerId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/BankerStatus'
      responses:
        204:
          description: status updated
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /bankers/requests:
    get:
      summary: Get active banker requests
      parameters:
        - in: query
          name: bankerId
          required: false
          type: string
        - in: query
          name: status
          required: false
          type: string
        - in: query
          name: clientId
          required: false
          type: string
      responses:
        200:
          description: Requests list
          schema:
            type: array
            items:
              $ref: '#/definitions/BankerRequest'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
    post:
      summary: Create a new banker request
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateBankerRequest'
      responses:
        204:
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /bankers/requests/{requestId}/status:
    put:
      summary: Update request status
      parameters:
        - in: path
          name: requestId
          required: true
          description: requestId
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BankerRequestStatus'
      responses:
        204:
          description: OK
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /greeter/events:
    get:
      summary: Get greeter events
      responses:
        200:
          description: Events
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /bankers/{bankerId}/events:
    get:
      summary: Get banker events
      parameters:
        - in: path
          name: bankerId
          required: true
          type: string
      responses:
        200:
          description: Events
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        default:
          description: Error
          schema:
            $ref: '#/definitions/Error'  
definitions:
  Error:
    type: object
    required:
      - message
    properties:
      message:
        type: string
  PhoneNumber:
    type: string
    description: If country code is not present, assumed +1
    pattern: ^(\+\d{1,2})?\d{10}$
  AppointmentReason:
    type: object
    required:
      - id
      - text
      - isPersonalService
    properties:
      id:
        type: string
      text:
        type: string
      isPersonalService:
        type: boolean
  SignupRequest:
    type: object
    required:
      - name
      - reasonId
      - phoneNumber
    properties:
      name:
        type: string
      appointmentReasonId:
        type: string
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
  SigninRequest:
    type: object
    required:
      - phoneNumber
    properties:
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
  SigninResponse:
    type: object
    required:
      - token
    properties:
      token:
        type: string
  AppointmentOffice:
    type: object
    required:
      - id
      - name
      - address
      - location
      - openTime
    properties:
      id:
        type: string
      name:
        type: string
        example: MBF Downtown
      address:
        type: string
        example: '1556 Broadway, sute 416\nNew York, NY, 10120, USA'
      location:
        $ref: '#/definitions/Location'
      openTime:
        type: string
        example: 'Today till 7.00PM'
  Location:
    type: object
    required:
      - longitude
      - latitude
    properties:
      longitude:
        type: number
        example: -122.083739
      latitude:
        type: number
        example: 37.423021
  AppointmentRequest:
    type: object
    required:
      - reasonId
      - officeId
    properties:
      reasonId:
        type: string
      officeId:
        type: string
  Appointment:
    type: object
    required:
      - id
      - status
      - reason
      - office
      - date
      - openTime
    properties:
      id:
        type: string
      status:
        $ref: '#/definitions/AppointmentStatus'
      reason:
        $ref: '#/definitions/AppointmentReason'
      office:
        $ref: '#/definitions/AppointmentOffice'
      date:
        type: string
      time:
        type: string
  AppointmentStatus:
    type: string
    x-ts-enum: AppointmentStatus
    enum:
      - ASSIGNED
      - CHECKED_IN
      - IN_SERVICE
      - FINISHED
      - CANCELLED
  UserInfo:
    type: object
    required:
      - name
      - phoneNumber
    properties:
      name:
        type: string
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
      currentAppointment:
        description: Either ASSINGED or CHECKED_IN appointment if exists
        $ref: '#/definitions/Appointment'
  AppointmentQueue:
    type: object
    required:
      - clients
    properties:
      clients:
        type: array
        items:
          $ref: '#/definitions/AppointmentQueueClient'
  AppointmentQueueClient:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        example: B006
      window:
        type: string
        example: 5
      isCurrentUser:
        type: boolean
  SignagePresenceUpdate:
    type: object
    required:
      - phoneNumber
      - visible
    properties:
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
      visible:
        type: boolean
  SignageIdentificationRequest:
    type: object
    required:
      - phoneNumber
    properties:
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
  SignageIdentification:
    type: object
    required:
      -  ads
    properties:
      client:
        $ref: '#/definitions/SignageIdentificationClient'
      ads:
        type: array
        items:
          $ref: '#/definitions/SignageAdvertisment'
  SignageIdentificationClient:
    type: object
    required:
      - name
      - phoneNumber
    properties:
      name:
        type: string
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
  SignageAdvertisment:
    type: object
    required:
      - id
      - shortText
      - fullText
      - pictureUrl
    properties:
      id:
        type: string
      shortText:
        type: string
      fullText:
        type: string
      pictureUrl:
        type: string
  ClientPresence:
    type: object
    properties:
      updatedOn:
        type: number
      bank:
        type: boolean
      signage:
        type: boolean
  ClientInfo:
    type: object
    required:
      - id
      - name
      - phoneNumber
      - presence
      - currentAppointmnet
    properties:
      id:
        type: string
      name:
        type: string
      phoneNumber:
        $ref: '#/definitions/PhoneNumber'
      presence:
        $ref: '#/definitions/ClientPresence'
      currentAppointment:
        description: Either ASSINGED or CHECKED_IN appointment if exists
        $ref: '#/definitions/Appointment'
  BankerStatus:
    type: string
    x-ts-enum: BankerStatus
    enum:
      - READY
      - BUSY
      - OFFLINE
  BankerInfo:
    type: object
    required:
      - id
      - name
      - specialty
      - status
    properties:
      id:
        type: string
      name:
        type: string
      specialty:
        type: string
      status:
        $ref: '#/definitions/BankerStatus'
  BankerRequestStatus:
    type: string
    x-ts-enum: BankerRequestStatus
    enum:
      - PENDING
      - BUSY
      - READY
      - READY_LATER
      - FINISHED
  CreateBankerRequest:
    type: object
    required:
      - bankerId
      - clientId
    properties:
      bankerId:
        type: string
      clientId:
        type: string
  BankerRequestInfo:
    type: object
    required:
      - id
      - bankerInfo
      - clientInfo
      - status
    properties:
      id:
        type: string
      bankerInfo:
        $ref: '#/definitions/BankerInfo'
      clientInfo:
        $ref: '#/definitions/ClientInfo'
      status:
        $ref: '#/definitions/BankerRequestStatus'
  EventType:
    type: string
    x-ts-enum: EventType
    enum:
      - CLIENT_AT_SIGNAGE
      - BANKER_REQUEST
      - BANKER_REQUEST_RESPONSE
  Event:
    type: object
    required:
      - id
      - type
    properties:
      id:
        type: string
      type:
        $ref: '#/definitions/EventType'
      clientInfo:
        $ref: '#/definitions/ClientInfo'
      bankerRequest:
        $ref: '#/definitions/BankerRequestInfo'